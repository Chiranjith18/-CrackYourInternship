1. Find the duplicate number
leetcode:
class Solution {
    public int findDuplicate(int[] nums) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int x:nums){
        map.put(x,map.getOrDefault(x,0)+1);
        }
        int res = -1;
        for(Map.Entry<Integer,Integer>e:map.entrySet()){
        if(e.getValue()>1){
        res = e.getKey();

        }
        }
        return res;
    }
}

GFG:

class Solution {
    public static ArrayList<Integer> duplicates(int[] arr) {
   ArrayList<Integer>list = new ArrayList<Integer>();
   HashMap<Integer,Integer>map = new HashMap<>();
   for(int x:arr){
        map.put(x,map.getOrDefault(x,0)+1);
   }
   for(Map.Entry<Integer,Integer>emap:map.entrySet()){
    if(emap.getValue()>1){
    list.add(emap.getKey());
    }
   }
  if(list.isEmpty()){
    list.add(-1);
  }
  return list;
    }
}
